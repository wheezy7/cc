<?xml version="1.0" encoding="UTF-8"?>

<?import java.lang.*?>
<?import java.util.*?>
<?import javafx.scene.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<AnchorPane xmlns="http://javafx.com/javafx"
            xmlns:fx="http://javafx.com/fxml"
            fx:controller=""
            prefHeight="400.0" prefWidth="600.0">
    public class ExerciseSell {
    public static void main(String[] args) {
    TicketWindow ticketWindow = new TicketWindow(2000);
    List<Thread> list = new ArrayList<>();
    // 用来存储买出去多少张票
    List<Integer> sellCount = new Vector<>();
    for (int i = 0; i < 2000; i++) {
    Thread t = new Thread(() -> {
    // 分析这里的竞态条件
    int count = ticketWindow.sell(randomAmount());
    sellCount.add(count);
    });
    list.add(t);
    t.start();
    }
    list.forEach((t) -> {
    try {
    t.join();
    } catch (InterruptedException e) {
    e.printStackTrace();
    }
    });
    // 买出去的票求和
    log.debug("selled count:{}",sellCount.stream().mapToInt(c -> c).sum());
    // 剩余票数
    log.debug("remainder count:{}", ticketWindow.getCount());
    }
    // Random 为线程安全
    static Random random = new Random();
    // 随机 1~5
    public static int randomAmount() {
    return random.nextInt(5) + 1;
    }
    }
    class TicketWindow {
    private int count;
    public TicketWindow(int count) {
    this.count = count;
    }

    public int getCount() {
    return count;
    }
    public int sell(int amount) {
    if (this.count >= amount) {
    this.count -= amount;
    return amount;
    } else {
    return 0;
    }
    }

</AnchorPane>
